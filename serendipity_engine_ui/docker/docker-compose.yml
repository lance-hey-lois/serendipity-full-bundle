version: '3.8'\n\nservices:\n  # Quantum Backend Service\n  quantum-backend:\n    build:\n      context: ..\n      dockerfile: docker/Dockerfile.backend\n    container_name: quantum-collapse-backend\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DEBUG=false\n      - PORT=8000\n      - HOST=0.0.0.0\n      - WORKERS=2\n      - QUANTUM_FALLBACK=true\n      - QUANTUM_MAX_RETRIES=3\n      - QUANTUM_TIMEOUT=30\n      - REQUIRE_AUTH=false\n      # Xanadu Cloud Configuration\n      - SF_API_KEY=${SF_API_KEY:-}\n      - XANADU_API_KEY=${XANADU_API_KEY:-}\n      - XANADU_DEVICE=${XANADU_DEVICE:-X8}\n      - XANADU_MAX_SHOTS=${XANADU_MAX_SHOTS:-1000}\n      - XANADU_USE_HARDWARE=${XANADU_USE_HARDWARE:-true}\n      - HARDWARE_TIMEOUT=30\n    volumes:\n      - ../engine:/app/engine:ro\n      - ../config:/app/config:ro\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    networks:\n      - quantum-network\n    logging:\n      driver: \"json-file\"\n      options:\n        max-size: \"10m\"\n        max-file: \"3\"\n\n  # Next.js Frontend Service\n  quantum-frontend:\n    build:\n      context: ..\n      dockerfile: docker/Dockerfile.frontend\n      args:\n        - NEXT_PUBLIC_QUANTUM_API_URL=http://quantum-backend:8000\n        - NEXT_PUBLIC_APP_VERSION=1.0.0\n    container_name: quantum-collapse-frontend\n    ports:\n      - \"3000:3000\"\n    environment:\n      - NODE_ENV=production\n      - NEXT_PUBLIC_QUANTUM_API_URL=http://localhost:8000\n      - QUANTUM_API_TOKEN=${QUANTUM_API_TOKEN:-}\n      - QUANTUM_BACKEND_URL=http://quantum-backend:8000\n    depends_on:\n      - quantum-backend\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000/api/quantum/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    networks:\n      - quantum-network\n    logging:\n      driver: \"json-file\"\n      options:\n        max-size: \"10m\"\n        max-file: \"3\"\n\n  # Redis Cache (Optional)\n  redis-cache:\n    image: redis:7-alpine\n    container_name: quantum-redis-cache\n    ports:\n      - \"6379:6379\"\n    command: redis-server --save 20 1 --loglevel warning\n    volumes:\n      - redis_data:/data\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n    networks:\n      - quantum-network\n    profiles:\n      - cache\n\n  # Prometheus Monitoring (Optional)\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: quantum-prometheus\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--web.enable-lifecycle'\n    restart: unless-stopped\n    networks:\n      - quantum-network\n    profiles:\n      - monitoring\n\n  # Grafana Dashboard (Optional)\n  grafana:\n    image: grafana/grafana:latest\n    container_name: quantum-grafana\n    ports:\n      - \"3001:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards\n      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources\n    restart: unless-stopped\n    depends_on:\n      - prometheus\n    networks:\n      - quantum-network\n    profiles:\n      - monitoring\n\n# Named volumes\nvolumes:\n  redis_data:\n    driver: local\n  prometheus_data:\n    driver: local\n  grafana_data:\n    driver: local\n\n# Networks\nnetworks:\n  quantum-network:\n    driver: bridge\n    name: quantum-collapse-network\n"